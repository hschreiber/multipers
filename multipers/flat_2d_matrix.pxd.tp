{{py:

"""
Flat 2D matrix for filtration values
"""

## Value types : CTYPE, PYTHON_TYPE, short
value_types = [
    ("int32_t", "np.int32", "i32"),
    # ("int64_t", "np.int64", "i64"),
    ("float", "np.float32", "f32"),
    ("double", "np.float64", "f64"),
]

number_of_parameters = [
    (2, "p002"),
    # (3, "p003"),
    (-1, "pAny"),
]

}}

# Python to C++ conversions
from multipers.filtrations cimport *
from libcpp.vector cimport vector
from libcpp cimport bool
cimport numpy as cnp
import numpy as np
from libc.stdint cimport int32_t, int64_t
from cython.operator cimport dereference

{{for CTYPE, PYTYPE, SHORT in value_types}}
{{for PVALUE, PSHORT in number_of_parameters}}
{{if PVALUE != -1}}
cdef extern from "gudhi/One_critical_filtration_with_n_parameters_view.h" namespace "Gudhi::multi_filtration":
    cdef cppclass One_critical_filtration_with_{{PVALUE}}_parameters_view_{{SHORT}} "Gudhi::multi_filtration::One_critical_filtration_with_n_parameters_view<{{PVALUE}},std::vector<{{CTYPE}}> >":
        ## Copied from cython vector
        ctypedef {{CTYPE}} value_type
        ctypedef size_t size_type
        ctypedef ptrdiff_t difference_type

        cppclass const_iterator
        cppclass iterator:
            iterator() except +
            iterator(iterator&) except +
            value_type& operator*()
            iterator operator++()
            iterator operator--()
            iterator operator++(int)
            iterator operator--(int)
            iterator operator+(size_type)
            iterator operator-(size_type)
            difference_type operator-(iterator)
            difference_type operator-(const_iterator)
            bint operator==(iterator)
            bint operator==(const_iterator)
            bint operator!=(iterator)
            bint operator!=(const_iterator)
            bint operator<(iterator)
            bint operator<(const_iterator)
            bint operator>(iterator)
            bint operator>(const_iterator)
            bint operator<=(iterator)
            bint operator<=(const_iterator)
            bint operator>=(iterator)
            bint operator>=(const_iterator)
        cppclass const_iterator:
            const_iterator() except +
            const_iterator(iterator&) except +
            const_iterator(const_iterator&) except +
            operator=(iterator&) except +
            const value_type& operator*()
            const_iterator operator++()
            const_iterator operator--()
            const_iterator operator++(int)
            const_iterator operator--(int)
            const_iterator operator+(size_type)
            const_iterator operator-(size_type)
            difference_type operator-(iterator)
            difference_type operator-(const_iterator)
            bint operator==(iterator)
            bint operator==(const_iterator)
            bint operator!=(iterator)
            bint operator!=(const_iterator)
            bint operator<(iterator)
            bint operator<(const_iterator)
            bint operator>(iterator)
            bint operator>(const_iterator)
            bint operator<=(iterator)
            bint operator<=(const_iterator)
            bint operator>=(iterator)
            bint operator>=(const_iterator)

        cppclass const_reverse_iterator
        cppclass reverse_iterator:
            reverse_iterator() except +
            reverse_iterator(reverse_iterator&) except +
            value_type& operator*()
            reverse_iterator operator++()
            reverse_iterator operator--()
            reverse_iterator operator++(int)
            reverse_iterator operator--(int)
            reverse_iterator operator+(size_type)
            reverse_iterator operator-(size_type)
            difference_type operator-(iterator)
            difference_type operator-(const_iterator)
            bint operator==(reverse_iterator)
            bint operator==(const_reverse_iterator)
            bint operator!=(reverse_iterator)
            bint operator!=(const_reverse_iterator)
            bint operator<(reverse_iterator)
            bint operator<(const_reverse_iterator)
            bint operator>(reverse_iterator)
            bint operator>(const_reverse_iterator)
            bint operator<=(reverse_iterator)
            bint operator<=(const_reverse_iterator)
            bint operator>=(reverse_iterator)
            bint operator>=(const_reverse_iterator)
        cppclass const_reverse_iterator:
            const_reverse_iterator() except +
            const_reverse_iterator(reverse_iterator&) except +
            operator=(reverse_iterator&) except +
            const value_type& operator*()
            const_reverse_iterator operator++()
            const_reverse_iterator operator--()
            const_reverse_iterator operator++(int)
            const_reverse_iterator operator--(int)
            const_reverse_iterator operator+(size_type)
            const_reverse_iterator operator-(size_type)
            difference_type operator-(iterator)
            difference_type operator-(const_iterator)
            bint operator==(reverse_iterator)
            bint operator==(const_reverse_iterator)
            bint operator!=(reverse_iterator)
            bint operator!=(const_reverse_iterator)
            bint operator<(reverse_iterator)
            bint operator<(const_reverse_iterator)
            bint operator>(reverse_iterator)
            bint operator>(const_reverse_iterator)
            bint operator<=(reverse_iterator)
            bint operator<=(const_reverse_iterator)
            bint operator>=(reverse_iterator)
            bint operator>=(const_reverse_iterator)
        One_critical_filtration_with_{{PVALUE}}_parameters_view_{{SHORT}}& operator=(One_critical_filtration_with_{{PVALUE}}_parameters_view_{{SHORT}}&)
        size_type size()
        size_type max_size()
        bint empty() nogil
        value_type& at(size_type) except +
        value_type& operator[](size_type)
        value_type& front()
        value_type& back()
        value_type* data()
        iterator begin()
        const_iterator cbegin()
        const_iterator const_begin "begin"()
        iterator end()
        const_iterator cend()
        const_iterator const_end "end"()
        reverse_iterator rbegin()
        const_reverse_iterator crbegin()
        const_reverse_iterator const_rbegin "rbegin"()
        reverse_iterator rend()
        const_reverse_iterator crend()
        const_reverse_iterator const_rend "rend"()
        void fill(const value_type&)
        void swap(One_critical_filtration_with_{{PVALUE}}_parameters_view_{{SHORT}}&)

        One_critical_filtration_with_{{PVALUE}}_parameters_view_{{SHORT}}(vector[value_type]&, size_t)  except + nogil
        One_critical_filtration_with_{{PVALUE}}_parameters_view_{{SHORT}}(One_critical_filtration_with_{{PVALUE}}_parameters_view_{{SHORT}}&) except + nogil

        One_critical_filtration_with_{{PVALUE}}_parameters_view_{{SHORT}}& operator=(const One_critical_filtration_with_{{PVALUE}}_parameters_view_{{SHORT}}&) except +
        One_critical_filtration_with_{{PVALUE}}_parameters_view_{{SHORT}}& operator=(const vector[value_type]&) except +

        size_type num_parameters() nogil
        size_type num_generators() nogil
        # @staticmethod
        # vector[value_type]& vector[value_type]() nogil
        
        void push_to_least_common_upper_bound(One_critical_filtration_with_{{PVALUE}}_parameters_view_{{SHORT}}&) nogil
        void pull_to_greatest_common_lower_bound(One_critical_filtration_with_{{PVALUE}}_parameters_view_{{SHORT}}&) nogil
        void push_to_least_common_upper_bound(One_critical_filtration_with_{{PVALUE}}_parameters_{{SHORT}}&) nogil
        void pull_to_greatest_common_lower_bound(One_critical_filtration_with_{{PVALUE}}_parameters_{{SHORT}}&) nogil

        bool is_finite() nogil

cdef extern from "gudhi/flat_2D_matrix.h" namespace "Gudhi":
    cdef cppclass Flat_vector_of_filtration_values_{{PSHORT}}_{{SHORT}} "Gudhi::Dynamic_flat_2D_matrix<{{PVALUE}},{{CTYPE}},std::vector<{{CTYPE}}>, Gudhi::multi_filtration::One_critical_filtration_with_n_parameters_view<{{PVALUE}},std::vector<{{CTYPE}}> > >":
        ctypedef size_t size_type
        ctypedef ptrdiff_t difference_type
        ctypedef One_critical_filtration_with_{{PVALUE}}_parameters_view_{{SHORT}} value_type

        cppclass const_iterator
        cppclass iterator:
            iterator() except +
            iterator(iterator&) except +
            value_type operator*()
            iterator operator++()
            iterator operator--()
            iterator operator++(int)
            iterator operator--(int)
            iterator operator+(size_type)
            iterator operator-(size_type)
            difference_type operator-(iterator)
            difference_type operator-(const_iterator)
            bint operator==(iterator)
            bint operator==(const_iterator)
            bint operator!=(iterator)
            bint operator!=(const_iterator)
            bint operator<(iterator)
            bint operator<(const_iterator)
            bint operator>(iterator)
            bint operator>(const_iterator)
            bint operator<=(iterator)
            bint operator<=(const_iterator)
            bint operator>=(iterator)
            bint operator>=(const_iterator)
        cppclass const_iterator:
            const_iterator() except +
            const_iterator(iterator&) except +
            const_iterator(const_iterator&) except +
            operator=(iterator&) except +
            const value_type operator*()
            const_iterator operator++()
            const_iterator operator--()
            const_iterator operator++(int)
            const_iterator operator--(int)
            const_iterator operator+(size_type)
            const_iterator operator-(size_type)
            difference_type operator-(iterator)
            difference_type operator-(const_iterator)
            bint operator==(iterator)
            bint operator==(const_iterator)
            bint operator!=(iterator)
            bint operator!=(const_iterator)
            bint operator<(iterator)
            bint operator<(const_iterator)
            bint operator>(iterator)
            bint operator>(const_iterator)
            bint operator<=(iterator)
            bint operator<=(const_iterator)
            bint operator>=(iterator)
            bint operator>=(const_iterator)

        cppclass const_reverse_iterator
        cppclass reverse_iterator:
            reverse_iterator() except +
            reverse_iterator(reverse_iterator&) except +
            value_type operator*()
            reverse_iterator operator++()
            reverse_iterator operator--()
            reverse_iterator operator++(int)
            reverse_iterator operator--(int)
            reverse_iterator operator+(size_type)
            reverse_iterator operator-(size_type)
            difference_type operator-(iterator)
            difference_type operator-(const_iterator)
            bint operator==(reverse_iterator)
            bint operator==(const_reverse_iterator)
            bint operator!=(reverse_iterator)
            bint operator!=(const_reverse_iterator)
            bint operator<(reverse_iterator)
            bint operator<(const_reverse_iterator)
            bint operator>(reverse_iterator)
            bint operator>(const_reverse_iterator)
            bint operator<=(reverse_iterator)
            bint operator<=(const_reverse_iterator)
            bint operator>=(reverse_iterator)
            bint operator>=(const_reverse_iterator)
        cppclass const_reverse_iterator:
            const_reverse_iterator() except +
            const_reverse_iterator(reverse_iterator&) except +
            operator=(reverse_iterator&) except +
            const value_type operator*()
            const_reverse_iterator operator++()
            const_reverse_iterator operator--()
            const_reverse_iterator operator++(int)
            const_reverse_iterator operator--(int)
            const_reverse_iterator operator+(size_type)
            const_reverse_iterator operator-(size_type)
            difference_type operator-(iterator)
            difference_type operator-(const_iterator)
            bint operator==(reverse_iterator)
            bint operator==(const_reverse_iterator)
            bint operator!=(reverse_iterator)
            bint operator!=(const_reverse_iterator)
            bint operator<(reverse_iterator)
            bint operator<(const_reverse_iterator)
            bint operator>(reverse_iterator)
            bint operator>(const_reverse_iterator)
            bint operator<=(reverse_iterator)
            bint operator<=(const_reverse_iterator)
            bint operator>=(reverse_iterator)
            bint operator>=(const_reverse_iterator)
        Flat_vector_of_filtration_values_{{PSHORT}}_{{SHORT}}& operator=(Flat_vector_of_filtration_values_{{PSHORT}}_{{SHORT}}&)
        void assign(size_type, const {{CTYPE}}&)
        void assign(size_type, const value_type&)
        void assign[InputIt](InputIt, InputIt) except +
        value_type at(size_type) except +
        value_type operator[](size_type)
        value_type front()
        value_type back()
        {{CTYPE}}* data()
        const {{CTYPE}}* const_data "data"()
        iterator begin()
        const_iterator const_begin "begin"()
        const_iterator cbegin()
        iterator end()
        const_iterator const_end "end"()
        const_iterator cend()
        reverse_iterator rbegin()
        const_reverse_iterator const_rbegin "rbegin"()
        const_reverse_iterator crbegin()
        reverse_iterator rend()
        const_reverse_iterator const_rend "rend"()
        const_reverse_iterator crend()
        bint empty() nogil
        size_type size()
        size_type max_size()
        void reserve(size_type) except + nogil
        size_type capacity()
        void shrink_to_fit() except +
        void clear() nogil
        iterator insert(const_iterator, const vector[{{CTYPE}}]&) except +
        iterator insert(const_iterator, size_type, const vector[{{CTYPE}}]&) except +
        iterator insert(const_iterator, size_type, const vector[vector[{{CTYPE}}]]&) except +
        iterator insert[InputIt](const_iterator, InputIt, InputIt) except +
        iterator emplace(const_iterator, ...) except +
        iterator erase(const_iterator)
        iterator erase(const_iterator, const_iterator)
        void push_back(const value_type&) except + nogil
        value_type emplace_back(...) except +
        void pop_back()
        void resize(size_type) except + nogil
        void resize(size_type, const {{CTYPE}}&) except +
        void resize(size_type, const vector[{{CTYPE}}]&) except +
        void swap(Flat_vector_of_filtration_values_{{PSHORT}}_{{SHORT}}&)

        Flat_vector_of_filtration_values_{{PSHORT}}_{{SHORT}}()  except + nogil
        Flat_vector_of_filtration_values_{{PSHORT}}_{{SHORT}}(size_t) except + nogil
        Flat_vector_of_filtration_values_{{PSHORT}}_{{SHORT}}(size_t, {{CTYPE}}) except + nogil
        Flat_vector_of_filtration_values_{{PSHORT}}_{{SHORT}}(size_t, const vector[{{CTYPE}}]&) except + nogil
        Flat_vector_of_filtration_values_{{PSHORT}}_{{SHORT}}(const vector[{{CTYPE}}]&) except + nogil
        Flat_vector_of_filtration_values_{{PSHORT}}_{{SHORT}}(const vector[vector[{{CTYPE}}]]&) except + nogil
        Flat_vector_of_filtration_values_{{PSHORT}}_{{SHORT}}(const_iterator, const_iterator) except + nogil
        Flat_vector_of_filtration_values_{{PSHORT}}_{{SHORT}}(Flat_vector_of_filtration_values_{{PSHORT}}_{{SHORT}}&) except + nogil

        {{CTYPE}}& operator()(size_t, size_t)
{{endif}}
{{endfor}}
{{endfor}}

